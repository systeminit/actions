name: Trigger Management Function
description: Trigger a management function in a new changeset
author: jkeiser@systeminit.com

# Add your action's branding here. This will appear on the GitHub Marketplace.
branding:
  icon: heart
  color: red

# Define your inputs here.
inputs:
  componentId:
    description: The ID of the component to run the management function on.
    required: true
  managementPrototypeId:
    description: The ID of the management function prototype to run.
    required: true
  domain:
    description: |
      A JSON object containing the domain properties to set for the management function component.

      For example:

      ```json
      properties: {
        "region": "us-east-1",
        "description": "Hi there",
        "tags": ["tag1", "tag2"]
      }
      ```

      You may specify property keys as names, property IDs, or paths (e.g. { "name/first": "John", "name/last": "Doe" }).

      Each property's value will be replaced with the new value. Properties not specified are left alone.
    required: true
  viewId:
    description: The ID of the view containing the component.
    required: true

  applyOnSuccess:
    description:
      Whether to apply the change set to main after triggering the management
      function. Set to "force" to force apply (if your user has permission to do
      so).
    required: false
    default: false # Temporarily false until we've propagated API endpoints all the way up
  abandonOnFailure:
    description:
      Whether to abandon the created changeset if triggering the management
      function fails.
    required: false
    default: false

  workspaceId:
    description:
      The ID of the workspace containing the component. By default, this will be
      set to the workspace ID you grabbed the token for.
    required: false
  changeSetId:
    description:
      The ID of the changeset containing the component, or "create" to create a
      new one based on HEAD.
    required: false
    default: create
  changeSetName:
    description:
      The name of the changeset to create. This is required if changeSetId is
      "create".
    required: false
  apiToken:
    description: |
      The API token. You can create one by going to
      https://auth.systeminit.com/workspaces/, clicking on the Settings (gear)
      icon on your workspace, and selecting "API Tokens." Then enter a name and
      expiration, and click "Generate API Token."

      You should use GitHub's secrets mechanism to store and pass this.
    required: true
  apiUrl:
    description:
      The URL to the SI instance's API server. This is optional, and generally
      points to SI's hosted API service by default.
  webUrl:
    description:
      The URL to the SI instance's web server. This defaults to the same as
      apiUrl. Generally only used for local development where the servers may be
      running on different ports.

# Define your outputs here.
outputs:
  managementFunctionLogs:
    description: The logs from the management function.
  workspaceId:
    description: The ID of the workspace containing the component.
  changeSetId:
    description: The ID of the changeset created.
  changeSetWebUrl:
    description: The web URL to the changeset.
  componentWebUrl:
    description: The web URL to the component.

runs:
  using: node20
  main: ../dist/index.js
